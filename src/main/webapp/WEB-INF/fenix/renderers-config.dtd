<?xml version="1.0" encoding="UTF-8"?>

<!--
  The renderers-config element is the document root of the renderers configuration.
  
  It allows the definition and configuration of several renderers and layouts.
  -->
<!ELEMENT renderers-config (renderer)*>

<!--
  The 'renderer' element defines one renderer in the system.
  
  Each renderer must specify at least a type and a class. The type indicates
  wich type of objects the renderer supports. The class indicates the java class
  of the renderer.
  
  Additionally the layout can be specified to allow variations in the rendering
  of a certain type.
  
  The 'renderer' element also allows the inclusion of properties to configure the
  defined renderer. This way you can have two layouts for the same type, using
  the same renderer, but using different configurations.
  
  Example:
	<renderer type="java.lang.Number" class="my.package.NumberRenderer"/>

	<renderer type="java.lang.Number" layout="base-2" class="my.package.NumberRenderer">
		<property name="base" value="2"/>
	</renderer>
  
	<renderer type="java.lang.Number" layout="base-16" class="my.package.NumberRenderer">
  		<property name="base" value="16"/>
	</renderer>
	
  Renderers can be specified associated with a certain presentation mode. The default,
  and most common, are "output" and "input". If no mode is specified then it defaults
  to "output". Modes provide further distinction between renderers and allow a greater
  separation than layout. For example the "input" mode creates a surrounding input 
  context that is not necessary in the "output" mode.
  
  Example:
  	<renderer mode="output" type="java.lang.Number" class="my.package.NumberRenderer"/>
  	<renderer mode="input"  type="java.lang.Number" class="my.package.OtherNumberRenderer"/>
  	
  In the example we define a diferent renderer to present the number in the "input" mode.
  This means that when a tag is used to do the input of a number the second renderer is 
  used.
-->
<!ELEMENT renderer (property*)>

<!ATTLIST renderer
	class NMTOKEN #REQUIRED
	type NMTOKEN #REQUIRED
	layout NMTOKEN #IMPLIED
	mode NMTOKEN #IMPLIED
>

<!--
  The property element allows the configuration of the renderer specified with 'class'
  in the 'renderer' element.
  
  When the renderer is selected to render an object it will first be configured with
  the properties defined by this element.
  
  An <property name="property" value="value"/> is the same as calling 
  'setProperty(convertedValue)' in the renderer were 'convertedValue' is "value"
  converted to the property type in the renderer. Only simple property types are supported.
-->
<!ELEMENT property EMPTY>

<!ATTLIST property
	value CDATA #REQUIRED
	name CDATA #REQUIRED
>
