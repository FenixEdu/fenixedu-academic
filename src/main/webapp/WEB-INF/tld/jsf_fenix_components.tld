<?xml version="1.0" encoding="UTF-8"?>

<!--
 Copyright 2005 FenixEdu, Inc. All rights reserved.
 IST PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
-->

<!DOCTYPE taglib
  PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN"
  "http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd">


<taglib>


  <!-- ========== Tag Library Description Elements ========================= -->


  <tlib-version>1.0</tlib-version>
  <jsp-version>1.2</jsp-version>
  <short-name>fc</short-name>
  <uri>http://fenix-ashes.ist.utl.pt/taglib/jsf-fenix</uri>
  <description>
  	Extentions of JavaServer Faces for Fenix Project
  </description>


  <!-- ========== Tag Descriptions ========================================= -->

  <tag>

    <name>htmlEditor</name>
    <tag-class>net.sourceforge.fenixedu.presentationTier.jsf.components.UIHtmlEditorTag</tag-class>
    <tei-class>com.sun.faces.taglib.FacesTagExtraInfo</tei-class>
    <body-content>empty</body-content>
    <description>
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Value binding expression to a backing bean
        property bound to the component instance for
        the UIComponent created by this custom action.
      </description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Component identifier of the UISelectItem
        component to be created.
      </description>
    </attribute>

    <attribute>
      <name>value</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Value binding expression pointing at a
        SelectItem instance containing the
        information for this option.
      </description>
    </attribute>
    
    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Flag indicating whether this component (and its
        children) should be rendered.  Expressions must
        evaluate to a boolean.
      </description>
    </attribute>
    
    <attribute>
      <name>width</name>
      <required>true</required>
      <rtexprvalue>false</rtexprvalue>
      <description>      	
      </description>
    </attribute>
    
    <attribute>
      <name>height</name>
      <required>true</required>
      <rtexprvalue>false</rtexprvalue>
      <description>      	
      </description>
    </attribute>
    
    <attribute>
      <name>showButtons</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>      	
      </description>
    </attribute>
    
    <attribute>
      <name>required</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>      	
      </description>
    </attribute>
    
    <attribute>
      <name>maxLength</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>      	
      </description>
    </attribute>

  </tag>
  
  
  
   <tag>
    <name>viewState</name>
    <tag-class>net.sourceforge.fenixedu.presentationTier.jsf.components.UIViewStateTag</tag-class>
    <tei-class>com.sun.faces.taglib.FacesTagExtraInfo</tei-class>
    <body-content>empty</body-content>
    <description>
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Value binding expression to a backing bean
        property bound to the component instance for
        the UIComponent created by this custom action.
      </description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Component identifier of the UISelectItem
        component to be created.
      </description>
    </attribute>

    <attribute>
      <name>value</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Value binding expression pointing at a
        SelectItem instance containing the
        information for this option.
      </description>
    </attribute>   
  </tag>
  <tag>
		<name>regexValidator</name>
		<tag-class>net.sourceforge.fenixedu.presentationTier.jsf.validators.RegexValidatorTag</tag-class>
		<tei-class>com.sun.faces.taglib.FacesTagExtraInfo</tei-class>
		<body-content>empty</body-content>
		<attribute>
			<name>regex</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
  </tag>
  
  <!-- Command Link -->
  <tag>
    <name>commandLink</name>
    <tag-class>net.sourceforge.fenixedu.presentationTier.jsf.components.UICommandLinkTag</tag-class>
    <tei-class>com.sun.faces.taglib.FacesTagExtraInfo</tei-class>
    <body-content>JSP</body-content>
    <description>
      <![CDATA[<p>Render an HTML "a" anchor element that acts like a
      form submit button when clicked.</p><p>General Behaviour</p><p>Both the encode and decode behavior require the ability to get
      the id/name for a hidden field whose value is set by the
      JavaScript form submit.  This name must be constructed as
      follows:</p><ul><li><p>Get the clientId for the form of which this component is a
      child.</p></li><li><p>Append<code>NamingContainer.SEPARATOR_CHAR</code>.</p></li><li><p>Append a constant string that is the same for all command
      link components in the tree.</p></li></ul><p>In the following text, this String is called
      hiddenFieldName.</p><p>Decode Behavior</p><ul><p>Obtain the "clientId" property of the component.  Obtain the<code>Map</code> from the "requestParameterMap" property of the<code>ExternalContext</code>.  Derive hiddenFieldName as above.
      Get the entry in the <code>Map</code> under the key that is the
      hiddenFieldName.  If the there is no entry, or the entry is the
      empty String, or the entry is not equal to the value of the
      "clientId" property, return immediately.  If there is an entry,
      and its value is equal to the value of the "clientId" property,
      create a new <code>javax.faces.event.ActionEvent</code> instance
      around the component and call <code>queueActionEvent()</code> on
      the component, passing the event.</p></ul><p>Encode Behavior</p><ul><p>Render "#" as the value of the "href" attribute. Render the current 
      value of the component as the link text if it is specified. Render 
      javascript that is functionally equivalent to the following as the value 
      of the "onclick" attribute:</p><p><code>document.forms['CLIENT_ID']['hiddenFieldName'].value='CLIENT_ID';
      document.forms['CLIENT_ID']['PARAM1_NAME'].value='PARAM1_VALUE';
      document.forms['CLIENT_ID']['PARAM2_NAME'].value='PARAM2_VALUE';
      return false;</code></p><p>document.forms['CLIENT_ID'].submit()" where hiddenFieldName isas described above, CLIENT_ID is the clientId of the UICommand
      component, PARAM*_NAME and PARAM*_VALUE are the names and values,
      respectively, of any nested UIParameter children.  The name and
      the value must be URLEncoded.  If the "styleClass" attribute is
      specified, render its value as the value of the "class" attribute.
      Render any non-UIParameter children as normal inside of the "a"
      element.  These will appear as the link text.  Allow the form
      renderer to output a single "input" element (for the entire page,
      regardless of how many command link components are in the page) of
      "type" "hidden" whose "name" is the value of hiddenFieldName, and
      which must not have a "value" attribute.  Multiple occurrences of
      command link components in the tree should not cause multiple
      hiddenFieldName hidden fields.  Allow the form renderer to output
      an "input" element of "type" "hidden" for each of the nested
      UIParameter children, taking the name property (but not the value)
      from each one in turn.</p></ul>]]>
    </description>
    <attribute>
      <name>action</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          MethodBinding representing the application action to invoke when
          this component is activated by the user.  The expression must
          evaluate to a public method that takes no parameters, and returns
          a String (the logical outcome) which is passed to the
          NavigationHandler for this application.
      </description>
    </attribute>
    <attribute>
      <name>actionListener</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          MethodBinding representing an action listener method that will be
          notified when this component is activated by the user.  The
          expression must evaluate to a public method that takes an
          ActionEvent parameter, with a return type of void.
      </description>
    </attribute>
    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The component identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
      </description>
    </attribute>
    <attribute>
      <name>immediate</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating that, if this component is activated by the user,
          notifications should be delivered to interested listeners and actions
          immediately (that is, during Apply Request Values phase) rather than
          waiting until Invoke Application phase.
      </description>
    </attribute>
    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
      </description>
    </attribute>
    <attribute>
      <name>value</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The current value of this component.
      </description>
    </attribute>
    <attribute>
      <name>accesskey</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Access key that, when pressed, transfers focus
          to this element.
      </description>
    </attribute>
    <attribute>
      <name>charset</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The character encoding of the resource designated
          by this hyperlink.
      </description>
    </attribute>
    <attribute>
      <name>coords</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The position and shape of the hot spot on the screen
          (for use in client-side image maps).
      </description>
    </attribute>
    <attribute>
      <name>dir</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Direction indication for text that does not inherit directionality.
          Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).
      </description>
    </attribute>
    <attribute>
      <name>hreflang</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The language code of the resource designated
          by this hyperlink.
      </description>
    </attribute>
    <attribute>
      <name>lang</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Code describing the language used in the generated markup
          for this component.
      </description>
    </attribute>
    <attribute>
      <name>onblur</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when this element loses focus.
      </description>
    </attribute>
    <attribute>
      <name>ondblclick</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          double clicked over this element.
      </description>
    </attribute>
    <attribute>
      <name>onfocus</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when this element receives focus.
      </description>
    </attribute>
    <attribute>
      <name>onkeydown</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a key is
          pressed down over this element.
      </description>
    </attribute>
    <attribute>
      <name>onkeypress</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a key is
          pressed and released over this element.
      </description>
    </attribute>
    <attribute>
      <name>onkeyup</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a key is
          released over this element.
      </description>
    </attribute>
    <attribute>
      <name>onmousedown</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          pressed down over this element.
      </description>
    </attribute>
    <attribute>
      <name>onmousemove</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          moved within this element.
      </description>
    </attribute>
    <attribute>
      <name>onmouseout</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          moved away from this element.
      </description>
    </attribute>
    <attribute>
      <name>onmouseover</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          moved onto this element.
      </description>
    </attribute>
    <attribute>
      <name>onmouseup</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          released over this element.
      </description>
    </attribute>
    <attribute>
      <name>rel</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The relationship from the current document
          to the anchor specified by this hyperlink.
          The value of this attribute is a space-separated
          list of link types.  
      </description>
    </attribute>
    <attribute>
      <name>rev</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          A reverse link from the anchor specified
          by this hyperlink to the current document.
          The value of this attribute is a space-separated
          list of link types.  
      </description>
    </attribute>
    <attribute>
      <name>shape</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The shape of the hot spot on the screen
          (for use in client-side image maps).  Valid
          values are:  default (entire region); rect
          (rectangular region); circle (circular region);
          and poly (polygonal region).
      </description>
    </attribute>
    <attribute>
      <name>style</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          CSS style(s) to be applied when this component is rendered.
      </description>
    </attribute>
    <attribute>
      <name>styleClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Space-separated list of CSS style class(es) to be applied when
          this element is rendered.  This value must be passed through
          as the "class" attribute on generated markup.
      </description>
    </attribute>
    <attribute>
      <name>tabindex</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
      </description>
    </attribute>
    <attribute>
      <name>target</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Name of a frame where the resource
          retrieved via this hyperlink is to
          be displayed.
      </description>
    </attribute>
    <attribute>
      <name>title</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Advisory title information about markup elements generated
          for this component.
      </description>
    </attribute>
    <attribute>
      <name>type</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The content type of the resource designated
          by this hyperlink.
      </description>
    </attribute>
    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
         The value binding expression linking this component to a property in a backing bean
      </description>
    </attribute>
  </tag>
  
  
  <!-- Command Button -->
  <tag>
    <name>commandButton</name>
    <tag-class>net.sourceforge.fenixedu.presentationTier.jsf.components.UICommandButtonTag</tag-class>
    <tei-class>com.sun.faces.taglib.FacesTagExtraInfo</tei-class>
    <body-content>JSP</body-content>
    <description>
      <![CDATA[<p>Renders an HTML "input" element.</p><p>Decode Behavior</p><ul><p>Obtain the <code>Map</code> from the "requestParameterMap"
      property of the <code>ExternalContext</code>.  If the value in the<code>Map</code> for the value of the "clientId" property of the
      component is <code>null</code>, create a String by concatenating
      the value of the "clientId" property of the component with the
      String ".x" (without the quotes).  Create another String in the
      same manner, but concatenate ".y" (without the quotes).  If<code>null</code> is the value in the <code>Map</code> for both
      Strings, return from <code>decode()</code>.  If the value in the<code>Map</code> for the value of the "clientId" property of the
      component is not <code>null</code>, get the value of the "type"
      attribute, and convert it to lower case.  If the result is equal
      to the String "reset" (without the quotes), return from<code>decode()</code>.  Otherwise, create a<code>javax.faces.event.ActionEvent</code> around the component,
      and pass it to the <code>queueEvent()</code> method of the
      component, which must be an instance of<code>UICommand</code>.</p></ul><p>Encode Behavior</p><ul><p>Render the clientId of the component as the value of the
      "name" attribute.  Render the current value of the component as
      the value of the "value" attribute.  If the "styleClass" attribute
      is specified, render its value as the value of the "class"
      attribute.</p></ul>]]>
    </description>
    <attribute>
      <name>action</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          MethodBinding representing the application action to invoke when
          this component is activated by the user.  The expression must
          evaluate to a public method that takes no parameters, and returns
          a String (the logical outcome) which is passed to the
          NavigationHandler for this application.
      </description>
    </attribute>
    <attribute>
      <name>actionListener</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          MethodBinding representing an action listener method that will be
          notified when this component is activated by the user.  The
          expression must evaluate to a public method that takes an
          ActionEvent parameter, with a return type of void.
      </description>
    </attribute>
    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The component identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
      </description>
    </attribute>
    <attribute>
      <name>immediate</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating that, if this component is activated by the user,
          notifications should be delivered to interested listeners and actions
          immediately (that is, during Apply Request Values phase) rather than
          waiting until Invoke Application phase.
      </description>
    </attribute>
    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
      </description>
    </attribute>
    <attribute>
      <name>value</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The current value of this component.
      </description>
    </attribute>
    <attribute>
      <name>accesskey</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Access key that, when pressed, transfers focus
          to this element.
      </description>
    </attribute>
    <attribute>
      <name>alt</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
        Alternate textual description of the
        element rendered by this component.
      </description>
    </attribute>
    <attribute>
      <name>dir</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Direction indication for text that does not inherit directionality.
          Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).
      </description>
    </attribute>
    <attribute>
      <name>disabled</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating that this element must never
          receive focus or be included in a subsequent
          submit.
      </description>
    </attribute>
    <attribute>
      <name>image</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
        Absolute or relative URL of the image
        to be displayed for this button.  If
        specified, this "input" element will be
        of type "image".  Otherwise, it will be
        of the type specified by the "type"
        property with a label specified by the
        "value" property.
      </description>
    </attribute>
    <attribute>
      <name>lang</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Code describing the language used in the generated markup
          for this component.
      </description>
    </attribute>
    <attribute>
      <name>onblur</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when this element loses focus.
      </description>
    </attribute>
    <attribute>
      <name>onchange</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when this element loses focus
          and its value has been modified since gaining focus.
      </description>
    </attribute>
    <attribute>
      <name>onclick</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          clicked over this element.
      </description>
    </attribute>
    <attribute>
      <name>ondblclick</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          double clicked over this element.
      </description>
    </attribute>
    <attribute>
      <name>onfocus</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when this element receives focus.
      </description>
    </attribute>
    <attribute>
      <name>onkeydown</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a key is
          pressed down over this element.
      </description>
    </attribute>
    <attribute>
      <name>onkeypress</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a key is
          pressed and released over this element.
      </description>
    </attribute>
    <attribute>
      <name>onkeyup</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a key is
          released over this element.
      </description>
    </attribute>
    <attribute>
      <name>onmousedown</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          pressed down over this element.
      </description>
    </attribute>
    <attribute>
      <name>onmousemove</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          moved within this element.
      </description>
    </attribute>
    <attribute>
      <name>onmouseout</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          moved away from this element.
      </description>
    </attribute>
    <attribute>
      <name>onmouseover</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          moved onto this element.
      </description>
    </attribute>
    <attribute>
      <name>onmouseup</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          released over this element.
      </description>
    </attribute>
    <attribute>
      <name>onselect</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when text within this
          element is selected by the user.
      </description>
    </attribute>
    <attribute>
      <name>readonly</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
      </description>
    </attribute>
    <attribute>
      <name>style</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          CSS style(s) to be applied when this component is rendered.
      </description>
    </attribute>
    <attribute>
      <name>styleClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Space-separated list of CSS style class(es) to be applied when
          this element is rendered.  This value must be passed through
          as the "class" attribute on generated markup.
      </description>
    </attribute>
    <attribute>
      <name>tabindex</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
      </description>
    </attribute>
    <attribute>
      <name>title</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Advisory title information about markup elements generated
          for this component.
      </description>
    </attribute>
    <attribute>
      <name>type</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
         Type of button to create.  Valid values are "submit" and
         "reset".  If not specified, or not a valid value, the default
         value is "submit".
      </description>
    </attribute>
    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
         The value binding expression linking this component to a property in a backing bean
      </description>
    </attribute>
  </tag>
  
  
  <!-- SelectOneMenu -->
  <tag>
    <name>selectOneMenu</name>
    <tag-class>net.sourceforge.fenixedu.presentationTier.jsf.components.UISelectOneTag</tag-class>
    <tei-class>com.sun.faces.taglib.FacesTagExtraInfo</tei-class>
    <body-content>JSP</body-content>
    <description>
      <![CDATA[<p>Render an HTML option list.</p><p><a name="decode">Decode Behavior</a></p><ul><p>See the <a href="javax.faces.SelectManyjavax.faces.Listbox.html#decodeOne">"Decode
      Behavior for UISelectOne Components"</a> section.</p></ul><p>Encode Behavior</p><ul><p>Render an HTML "select" element.  Render the clientId of the
      component as the value of the "name" attribute.  If the
      "styleClass" attribute is specified, render its value as the value
      of the "class" attribute on the "select" element. If the component
      to be rendered is a UISelectMany, render "true" as the value of
      the "multiple" attribute.  Use the number of items as the value of
      the "size" attribute.  See the <a href="javax.faces.SelectManyjavax.faces.Listbox.html#options">"Rendering
      the option elements" </a> specification for<code>ListboxRenderer</code> for more detail on how to render the "option" elements in this renderer.</p></ul>]]>
    </description>
    <attribute>
      <name>converter</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Converter instance registered with this component.
      </description>
    </attribute>
    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The component identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
      </description>
    </attribute>
    <attribute>
      <name>immediate</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating that this component's value must be
          converted and validated immediately (that is, during
          Apply Request Values phase), rather than waiting
          until Process Validations phase.
      </description>
    </attribute>
    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
      </description>
    </attribute>
    <attribute>
      <name>required</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating that the user is required to provide a submitted
          value for this input component.
      </description>
    </attribute>
    <attribute>
      <name>validator</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          MethodBinding representing a validator method that will be called
          during Process Validations to perform correctness checks on the
          value of this component.  The expression must evaluate to a public
          method that takes FacesContext, UIComponent, and Object parameters,
          with a return type of void.
      </description>
    </attribute>
    <attribute>
      <name>value</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The current value of this component.
      </description>
    </attribute>
    <attribute>
      <name>valueChangeListener</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          MethodBinding representing a value change listener method that will be
          notified when a new value has been set for this input component.  The
          expression must evaluate to a public method that takes a
          ValueChangeEvent parameter, with a return type of void.
      </description>
    </attribute>
    <attribute>
      <name>accesskey</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Access key that, when pressed, transfers focus
          to this element.
      </description>
    </attribute>
    <attribute>
      <name>dir</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Direction indication for text that does not inherit directionality.
          Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).
      </description>
    </attribute>
    <attribute>
      <name>disabled</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating that this element must never
          receive focus or be included in a subsequent
          submit.
      </description>
    </attribute>
    <attribute>
      <name>disabledClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
         CSS style class to apply to the rendered label
         on disabled options.
      </description>
    </attribute>
    <attribute>
      <name>enabledClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
         CSS style class to apply to the rendered label
         on enabled options.
      </description>
    </attribute>
    <attribute>
      <name>lang</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Code describing the language used in the generated markup
          for this component.
      </description>
    </attribute>
    <attribute>
      <name>onblur</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when this element loses focus.
      </description>
    </attribute>
    <attribute>
      <name>onchange</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when this element loses focus
          and its value has been modified since gaining focus.
      </description>
    </attribute>
    <attribute>
      <name>onclick</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          clicked over this element.
      </description>
    </attribute>
    <attribute>
      <name>ondblclick</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          double clicked over this element.
      </description>
    </attribute>
    <attribute>
      <name>onfocus</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when this element receives focus.
      </description>
    </attribute>
    <attribute>
      <name>onkeydown</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a key is
          pressed down over this element.
      </description>
    </attribute>
    <attribute>
      <name>onkeypress</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a key is
          pressed and released over this element.
      </description>
    </attribute>
    <attribute>
      <name>onkeyup</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a key is
          released over this element.
      </description>
    </attribute>
    <attribute>
      <name>onmousedown</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          pressed down over this element.
      </description>
    </attribute>
    <attribute>
      <name>onmousemove</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          moved within this element.
      </description>
    </attribute>
    <attribute>
      <name>onmouseout</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          moved away from this element.
      </description>
    </attribute>
    <attribute>
      <name>onmouseover</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          moved onto this element.
      </description>
    </attribute>
    <attribute>
      <name>onmouseup</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when a pointer button is
          released over this element.
      </description>
    </attribute>
    <attribute>
      <name>onselect</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Javascript code executed when text within this
          element is selected by the user.
      </description>
    </attribute>
    <attribute>
      <name>readonly</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating that this component will prohibit
          changes by the user.  The element may receive focus
          unless it has also been disabled.
      </description>
    </attribute>
    <attribute>
      <name>style</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          CSS style(s) to be applied when this component is rendered.
      </description>
    </attribute>
    <attribute>
      <name>styleClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Space-separated list of CSS style class(es) to be applied when
          this element is rendered.  This value must be passed through
          as the "class" attribute on generated markup.
      </description>
    </attribute>
    <attribute>
      <name>tabindex</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Position of this element in the tabbing order
          for the current document.  This value must be
          an integer between 0 and 32767.
      </description>
    </attribute>
    <attribute>
      <name>title</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Advisory title information about markup elements generated
          for this component.
      </description>
    </attribute>
    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
         The value binding expression linking this component to a property in a backing bean
      </description>
    </attribute>
  </tag>
	<tag>
		<name>fenixCalendar</name>
		<tag-class>net.sourceforge.fenixedu.presentationTier.jsf.components.FenixCalendarTag</tag-class>
		<description>Fenix Generic Calendar</description>
  
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>begin</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
			<description>Begin date of the Evaluation Calendar. Type: java.util.Calendar</description>
		</attribute>
		<attribute>
			<name>end</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
			<description>End date of the Evaluation Calendar. Type: java.util.Calendar</description>
		</attribute>
		<attribute>
			<name>createLink</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<description>Full link to set on every date of the calendar, forwarding to the create object interface. Type: String</description>
		</attribute>
		<attribute>
			<name>editLinkPage</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
			<description>Page link to set on a edit link of a certain object in the a given date of the calendar. Type: String</description>
		</attribute>
		<attribute>
			<name>editLinkParameters</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
			<description>List of CalendarLinks of objects to print on specific dates of the calendar. Type: List</description>
		</attribute>
		<attribute>
			<name>extraLines</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<description>Include extra empty lines in calendar entries</description>
		</attribute>
	</tag>
	<tag>
		<name>degreeCurricularPlanRender</name>
		<tag-class>net.sourceforge.fenixedu.presentationTier.jsf.components.degreeStructure.DegreeCurricularPlanTag</tag-class>
		<description>Fenix Degree Curricular Plan Render</description>
  
		<attribute>
			<name>id</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>dcp</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
			<description>Degree Curricular Plan to be rendered. Type: net.sourceforge.fenixedu.domain.DegreeCurricularPlan</description>
		</attribute>
		<attribute>
			<name>toEdit</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<description>Indicates if edit options are to be available. Type: java.lang.Boolean. Default: false</description>
		</attribute>
		<attribute>
			<name>showRules</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Render rules and corresponding options. Type: java.lang.Boolean. Default: false</description>
		</attribute>		
		<attribute>
			<name>organizeBy</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Groups or Years. Type: java.lang.String. Default: groups</description>
		</attribute>
		<attribute>
			<name>onlyStructure</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
			<description>Indicates if only course groups should be rendered. Type: java.lang.Boolean. Default: false</description>
		</attribute>
		<attribute>
			<name>toOrder</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Indicates if order options are to be available. Valid if onlyStructure is true. Type: java.lang.Boolean. Default: false</description>
		</attribute>
		<attribute>
			<name>hideCourses</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Indicates if curricular courses are to be displayed or not. Valid if onlyStructure is false. Type: java.lang.Boolean. Default: false</description>
		</attribute>
		<attribute>
			<name>executionYear</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>If present, contexts are filtered accordingly. Type: net.sourceforge.fenixedu.domain.ExecutionYear. Default: false</description>
		</attribute>
		<attribute>
			<name>reportsAvailable</name>
			<required>false</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Indicates if course group reports links are to be available. Type: java.lang.Boolean. Default: false</description>
		</attribute>
		<attribute>
			<name>module</name>
			<required>true</required>
			<rtexprvalue>true</rtexprvalue>
			<description>Indicates the submodule of the jsp that is using this component.</description>
		</attribute>
	</tag>
  <tag>
		<name>breadCrumbs</name>
		<tag-class>net.sourceforge.fenixedu.presentationTier.jsf.components.BreadCrumbsTag</tag-class>
		<description>Public page bread crumbs</description>

		<attribute>
			<name>rendered</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>degree</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>trailingCrumb</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
	</tag>
  <tag>
    <name>dataRepeater</name>
    <tag-class>net.sourceforge.fenixedu.presentationTier.jsf.components.UIDataRepeaterTag</tag-class>
    <tei-class>com.sun.faces.taglib.FacesTagExtraInfo</tei-class>
    <body-content>JSP</body-content>
    <description>
    </description>
    <attribute>
      <name>first</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Zero-relative row number of the first row to be displayed.  If this
          property is set to zero, rendering will begin with the first row of
          the underlying data.
      </description>
    </attribute>
    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The component identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
      </description>
    </attribute>
    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
      </description>
    </attribute>
    <attribute>
      <name>rows</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The number of rows to display, starting with the one identified by the
          "first" property.  If this value is set to zero, all available rows in
          the underlying data model will be displayed.
      </description>
    </attribute>
    <attribute>
      <name>value</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The current value of this component.
      </description>
    </attribute>
    <attribute>
      <name>var</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Name of a request-scope attribute under which the model data for the
          row selected by the current value of the "rowIndex" property (i.e.
          also the current value of the "rowData" property) will be exposed.
      </description>
    </attribute>
    <attribute>
      <name>bgcolor</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Name or code of the background color for this table.
      </description>
    </attribute>
    <attribute>
      <name>border</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Width (in pixels) of the border to be drawn
          around this table.
      </description>
    </attribute>
    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
         The value binding expression linking this component to a property in a backing bean
      </description>
    </attribute>
	<attribute>
      <name>rowIndexVar</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      </description>
    </attribute>
    <attribute>
      <name>rowCountVar</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      </description>
    </attribute>
  </tag>

  <tag>
		<name>dateValidator</name>
		<tag-class>net.sourceforge.fenixedu.presentationTier.jsf.validators.DateValidatorTag</tag-class>
		<tei-class>com.sun.faces.taglib.FacesTagExtraInfo</tei-class>
		<body-content>empty</body-content>
		<attribute>
			<name>format</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>strict</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
  </tag>
  
  <tag>
		<name>autoComplete</name>
		<tag-class>net.sourceforge.fenixedu.presentationTier.jsf.components.UIAutoCompleteTag</tag-class>
		<tei-class>com.sun.faces.taglib.FacesTagExtraInfo</tei-class>
		<body-content>empty</body-content>
		<attribute>
	      <name>id</name>
	      <required>false</required>
	      <rtexprvalue>false</rtexprvalue>
	      <description>
	        Component identifier of the UISelectItem
	        component to be created.
	      </description>
	    </attribute>
		<attribute>
	      <name>binding</name>
	      <required>false</required>
	      <rtexprvalue>false</rtexprvalue>
	      <description>
	      binding for component
	      </description>
	    </attribute>
	    <attribute>
	      <name>rendered</name>
	      <required>false</required>
	      <rtexprvalue>false</rtexprvalue>
	      <description>
	        Flag indicating whether this component (and its
	        children) should be rendered.  Expressions must
	        evaluate to a boolean.
	      </description>
	    </attribute>
		<attribute>
			<name>inputTextArgName</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>labelField</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>valueField</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>serviceName</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>serviceArgs</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>autoCompleteStyleClass</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>autoCompleteItemsStyleClass</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>textFieldStyleClass</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>value</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>className</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>required</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>size</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>

  </tag>
  
  <tag>
    <name>extendedOutputText</name>
    <tag-class>net.sourceforge.fenixedu.presentationTier.jsf.components.UIExtendedOutputTextTag</tag-class>
    <tei-class>com.sun.faces.taglib.FacesTagExtraInfo</tei-class>
    <body-content>JSP</body-content>
    <description>
      If the "styleClass" or "style" attributes are
      present, render a "span" element.  If the "styleClass" attribute
      is present, render its value as the value of the "class"
      attribute.  If the "style" attribute is present, pass it thru.  If
      the "escape" attribute is not present, or it is present and its
      value is "true" all angle brackets should be converted to the
      ampersand xx semicolon syntax when rendering the value of the
      "value" attribute as the value of the component.  If the "escape"
      attribute is present and is "false" the value of the component
      should be rendered as text without escaping.
    </description>
    <attribute>
      <name>converter</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Converter instance registered with this component.
      </description>
    </attribute>
    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The component identifier for this component.  This value must be
          unique within the closest parent component that is a naming
          container.
      </description>
    </attribute>
    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Flag indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
      </description>
    </attribute>
    <attribute>
      <name>value</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          The current value of this component.
      </description>
    </attribute>
    <attribute>
      <name>escape</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
        Flag indicating that characters that are sensitive
        in HTML and XML markup must be escaped.  This flag
        is set to "true" by default.
      </description>
    </attribute>
    <attribute>
      <name>style</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          CSS style(s) to be applied when this component is rendered.
      </description>
    </attribute>
    <attribute>
      <name>styleClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Space-separated list of CSS style class(es) to be applied when
          this element is rendered.  This value must be passed through
          as the "class" attribute on generated markup.
      </description>
    </attribute>
    <attribute>
      <name>title</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
          Advisory title information about markup elements generated
          for this component.
      </description>
    </attribute>
    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
         The value binding expression linking this component to a property in a backing bean
      </description>
    </attribute>
    <attribute>
      <name>linebreak</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      
         The linebreak attribute, when true, replace all string line breaks for html line breaks.
         Default value is false.
      </description>
    </attribute>
  </tag>
        
   <tag>
		<name>contentLink</name>
		<tag-class>net.sourceforge.fenixedu.presentationTier.jsf.components.ContentLinkTag</tag-class>
		<description>Content Link Tag</description>
  
		<attribute>
			<name>content</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>label</name>
			<required>true</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>
		<attribute>
			<name>rendered</name>
			<required>false</required>
			<rtexprvalue>false</rtexprvalue>
		</attribute>		
	</tag> 
    
</taglib>
