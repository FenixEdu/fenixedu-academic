#IngressionType management labels
academic.administration.spring.title = Academic Administration (Spring)
file.teacher.authorizations.upload.parsing.failed = An error ocurred parsing the uploaded file.
IDDocumentType.AIR_FORCE_IDENTITY_CARD = Portuguese Air Force Identity Card
IDDocumentType.CITIZEN_CARD = Citizen Card
IDDocumentType.EXTERNAL = External
IDDocumentType.FOREIGNER_IDENTITY_CARD = Foreigner Identity Card
IDDocumentType.IDENTITY_CARD = Identity Card
IDDocumentType.MILITARY_IDENTITY_CARD = Military Identity Card
IDDocumentType.NATIVE_COUNTRY_IDENTITY_CARD = Identity Card of Origin Country
IDDocumentType.NAVY_IDENTITY_CARD = Navy Identity Card
IDDocumentType.OTHER = Other
IDDocumentType.PASSPORT = Passport
IDDocumentType.RESIDENCE_AUTHORIZATION = Residence Authorization
label.accessRequirements=Regime de Acesso
label.add = Add
label.all = All
label.are.you.sure = Are you sure ?
label.back = Back
label.cancel=Cancel
label.candidacy.choose.new.candidacy = Please select the new candidacy process
label.candidacy.manageIngressionType.CreateIngressionType=Create Ingression Type
label.candidacy.manageIngressionType.ReadIngressionType=Ingression Type
label.candidacy.manageIngressionType.SearchIngressionType=Search Ingression Type
label.candidacy.manageIngressionType.UpdateIngressionType=Update Ingression Type
label.candidacy.move.candidate = Move Candidate
label.close = Close
label.confirmation = Confirm
label.country = Country
label.country.code = Code
label.country.default = Default Country
label.country.nationality = Nacionality
label.country.localized.name = Localized Name
label.country.three.letter.code = Code (3 Letter)
label.country.saved = Changes Saved!
label.course = Course
label.courses = Courses
label.create = Create
label.create.category = Create category
label.curricularPlan=Curriculum Plan
label.degree = Degree
label.degrees = Degrees
label.delete = Delete
label.delete.confirm = Are you sure that you want to delete?
label.department = Department
label.description=Description
label.details = Details
label.edit = Edit
label.enroll = Enroll
label.event.back = Back
label.event.cancel = Cancel
label.event.create = Create
label.event.delete = Delete
label.event.update = Edit
label.false = No
label.groupEnrolment = Groups
label.IngressionType.code=Code
label.IngressionType.description=Description
label.IngressionType.directAccessFrom1stCycle=Direct Access from 1st Cycle
label.IngressionType.externalDegreeChange=External Degree Change
label.IngressionType.firstCycleAttribution=First Cycle Attribution
label.IngressionType.handicappedContingent=Handicapped Contingent
label.IngressionType.hasEntryPhase=Has Entry Phase
label.IngressionType.internal2ndCycleAccess= Internal 2nd Cycle Access
label.IngressionType.internal3rdCycleAccess= Internal 3rd Cycle Access
label.IngressionType.internalDegreeChange=Internal Course Change
label.IngressionType.isolatedCurricularUnits=Isolated Curricular Units
label.IngressionType.middleAndSuperiorCourses=Middle and Superior Courses
label.IngressionType.over23=Over 23
label.IngressionType.reIngression=Reingression
label.IngressionType.transfer=Transfer
label.listing = Listing
label.manageDepartments = Department Management
label.manageIngressionType.SearchIngressionType.confirmDelete = Do you wish to delete this ingression type?
label.name = Name
label.no = No
label.no.ingression.types.defined = No ingression types defined.
label.no.statutes.defined = No statutes defined.
label.noResultsFound=No Results Found
label.period = Period
label.photo = Photo
label.professionalStatus=Professional status
label.responsible = Responsible
label.save = Save
label.search = Search
label.StatuteType.active = Active
label.StatuteType.associativeLeaderStatute = Is Associative Leader Statute
label.StatuteType.code = Code
label.StatuteType.explicitCreation = Explicit Creation
label.StatuteType.grantOwnerStatute = Grant Owner Statute
label.StatuteType.handicappedStatute = Handicapped Statute
label.StatuteType.name = Name
label.StatuteType.seniorStatute = Senior Statute
label.StatuteType.specialSeasonGranted = Special Season Granted
label.StatuteType.specialSeasonGrantedByRequest = Special Season Granted By Request
label.StatuteType.visible = Visible
label.StatuteType.workingStudentStatute = Working Student Statute
label.StatuteTypeManagement.createStatuteType = Create Statute
label.StatuteTypeManagement.readStatuteType = View Statute
label.StatuteTypeManagement.searchStatuteType = Search Statutes
label.StatuteTypeManagement.updateStatuteType = Update Statute
label.student.registrationManagement = Registration Management
label.student.registrationManagement.active = active
label.student.registrationManagement.inactive = inactive
label.student.registrationManagement.noPhds = No phds found
label.student.registrationManagement.noRegistrations = No registrations found
label.student.registrationManagement.personalData = Personal Information
label.student.registrationManagement.personalData.birthdate = Birthdate
label.student.registrationManagement.personalData.idNumber = Id Document
label.student.registrationManagement.personalData.name = Name
label.student.registrationManagement.personalData.nationality = Nacionality
label.student.registrationManagement.personalData.taxNumber = Tax Number
label.student.registrationManagement.phd.phdProgram = Phd Program
label.student.registrationManagement.phd.processNumber = Process
label.student.registrationManagement.phd.state = State
label.student.registrationManagement.phd.year = Year
label.student.registrationManagement.phds = Phd Processes
label.student.registrationManagement.possibleDuplicates = Possible Duplicates
label.student.registrationManagement.registration.degree = Degree
label.student.registrationManagement.registration.enrolments = Enrolments
label.student.registrationManagement.registration.number = Number
label.student.registrationManagement.registration.protocol = Protocol
label.student.registrationManagement.registration.startdate = Start Date
label.student.registrationManagement.registration.state = State
label.student.registrationManagement.registrations = Registrations
label.student.registrationManagement.search = Search
label.student.registrationManagement.search.notStudent = Selected user is not a student
label.student.registrationManagement.search.placeholder = Name or IstID
label.student.registrationManagement.targetStudent = Target Student
label.student.registrationManagement.transfer = Transfer
label.student.registrationManagement.transfer.info = This interface allows the transfer of registrations (with all associated data, like payments, statuses, etc) to the Target Student. The Possible Duplicates section contains system determined matches of the Target Student to be used as the source of information, if the source you were looking for is not found you can use the search in the bottom
label.student.registrationManagement.transfer.success = Registration transfer completed successfully
label.student.registrationManagement.transferconfirmation = This action will transfer all registrations, payments, statuses and extra curricular activities from student {0} to student {1}.\\nAre you sure you wish to continue?
label.submit=Submit
label.teacher = Teacher
label.title.candidacy.manageIngressionType = Manage Ingress Types
label.title.candidacy.manageIngressionType= Manage Ingression Types
label.title.StatuteTypeManagement = Manage Student Statutes
label.true = Yes
label.update=Update
label.username = Username
label.valid.username = The username has to be valid.
label.view = View
label.yes = Yes
link.coordinator.degreeSite.management=Course page
link.student.registrationManagement.transfer = Transfer
link.student.registrationManagement.viewCurriculum = view process
program.conclusion.editable.average = Editable Average
program.conclusion.empty = There are no program conclusions!
program.conclusion.event.types = Event types
program.conclusion.graduation.level = Graduation Level
program.conclusion.graduation.title = Graduation Title
program.conclusion.provides.alumni = Provides alumni
program.conclusion.skip.validation = Skip validation
program.conclusion.target.state = Registration target state
program.conclusion.title = Manage program conclusions
RegistrationStateType.CANCELED = Canceled
RegistrationStateType.CONCLUDED = Concluded
RegistrationStateType.EXTERNAL_ABANDON = Abandon
RegistrationStateType.FLUNKED = Prescribed
RegistrationStateType.INACTIVE = Inactive
RegistrationStateType.INTERNAL_ABANDON = Internal Abandon
RegistrationStateType.INTERRUPTED = Temporary Interruption of Studies
RegistrationStateType.MOBILITY = Mobility
RegistrationStateType.REGISTERED = Registered
RegistrationStateType.SCHOOLPARTCONCLUDED = Curricular Part Concluded
RegistrationStateType.STUDYPLANCONCLUDED = Study Plan Concluded
RegistrationStateType.TRANSITED = Transited
RegistrationStateType.TRANSITION = In Transition
teacher.authorizations.authorized = Authorized by
teacher.authorizations.category = Category
teacher.authorizations.collapse.all.courses = Collapse all courses
teacher.authorizations.contracted = Contracted
teacher.authorizations.contracted.no = No
teacher.authorizations.contracted.yes = Yes
teacher.authorizations.create.title = Teacher Authorizations
teacher.authorizations.creation.date = Created in
teacher.authorizations.csv.column.1.username = Username
teacher.authorizations.csv.column.1.username.error = User does not exist: {0}
teacher.authorizations.csv.column.2.categoryCode = Category code
teacher.authorizations.csv.column.2.categoryCode.error = Invalid category code: {0}
teacher.authorizations.csv.column.3.departmentAcronym = Department acronym
teacher.authorizations.csv.column.3.departmentAcronym.error = Department acronym invalid: {0}
teacher.authorizations.csv.column.4.lessonHours = Hours
teacher.authorizations.csv.column.4.lessonHours.error = Hours value invalid: {0}
teacher.authorizations.csv.column.4.lessonHours.example = Example: (decimal value) For 5 hours and a half use 5.5
teacher.authorizations.csv.column.5.contracted = Contracted
teacher.authorizations.csv.column.5.contracted.error = Contracted value invalid: {0}
teacher.authorizations.csv.column.5.contracted.example = Example: (Y or N) For yes use Y, for no use N
teacher.authorizations.csv.column.6.responsible = Responsible
teacher.authorizations.department = Departament
teacher.authorizations.department.all = All
teacher.authorizations.displayname = Name
teacher.authorizations.download = Export to CSV file
teacher.authorizations.empty = There are no authorizations.
teacher.authorizations.expand.all.courses = Expand all courses
teacher.authorizations.lessonHours = Lesson hours
teacher.authorizations.period = Period
teacher.authorizations.placeholder.user = Type a users' name or username
teacher.authorizations.revoke = Revoke
teacher.authorizations.revoked = Revoked by
teacher.authorizations.revokeTime = Revoked in
teacher.authorizations.search = Search
teacher.authorizations.subtitle = Authorizations
teacher.authorizations.title = Teacher Authorizations
teacher.authorizations.title.search = Search
teacher.authorizations.upload = Upload authorizations
teacher.authorizations.upload.file = CSV file
teacher.authorizations.upload.message.example = Example : For {0} use {1}
teacher.authorizations.upload.message.header = You can upload multiple authorizations in a single CSV file with the following ordered columns:
teacher.authorizations.upload.submit = Import
teacher.authorizations.upload.sucess = The following authorizations were sucessfully imported
teacher.authorizations.username = Username
teacher.authorizations.value.authorized = Authorized
teacher.authorizations.value.revoked = Revoked
teacher.authorizations.view.current = Active authorizations
teacher.authorizations.view.revoked = Revoked authorizations
teacher.categories = Teacher categories
teacher.categories.code = Code
teacher.categories.create.or.edit = Create or Edit
teacher.categories.name = Name
teacher.categories.weight = Weight
teacher.category = Category
teacher.category.code.already.exists = A category with code {0} already exists.
teacher.professorship.choose.course = Choose course
teacher.professorship.create = Add course
teacher.professorships.courses.for.period = Assigned courses for <b>{0}</b>
teacher.professorships.csv.column.1.username = Teacher's ID
teacher.professorships.csv.column.2.name = Teacher's Name
teacher.professorships.csv.column.3.courseCode = Execution Course Code
teacher.professorships.csv.column.4.courseName = Execution Course Name
teacher.professorships.csv.column.5.semester = Semester/Year Code
teacher.professorships.empty = There no courses associated
teacher.professorships.explanation = This funcionality allows you to assign courses to authorized teachers.</br>If the teacher is not present in the listing below, it is necessary to create a teacher authorization.
teacher.professorships.number = # Assigned courses
teacher.professorships.subtitle.departments.all = Teacher authorizations for all departments in period {0}
teacher.professorships.subtitle.departments.single = Teacher authorizations for the {0} in period {1}
teacher.professorships.title = Teacher service attribution
text.coordinator.degreeSite.editOK=The changes were made successfully. Displays the page of the course through the Link
text.coordinator.degreeSite.help=Here you can\: <br/><ul><li> manage all information available on the Home Course; <br/></li><li> see page history Course; <br/></li><li> and still see their home page. </li>
title.countries = Countries
title.departments = Departments
title.manage.countries = Country Management
scientific.council.spring.title = Scientific Council (Spring)
label.competence.courses = Competence Courses
label.listing.options = Listing Options
label.show.versions = Show Version
label.approved.toggle = Unapprove
label.published.toggle = Approve
competence.course.management.title = Competence Course Management
label.manage.members = Member Management
label.unknown.error = An unexpected error occured, try again later.
label.user.already.exists.group = The user already exists in the group.
label.state = State
label.current.department = Current Department: {0}
