body {
	margin: 0;
	font: small sans-serif;
	background: #F0F0F0;
	color:#363636;
}

td,th {
	padding-left: 0;
	text-align: left;
	vertical-align: top;
	padding-bottom:3px;
}



th{
	font-size: 20px;
	padding-right:20px;
	padding-bottom:15px;
	
}

tr {
	
}

table{
	
	padding: 1em;
	
	font: small sans-serif;
}

span {
	
}

div {
	margin-bottom: 1em;
}

/* High-Level Debug Page Elements*/
#errorInfo{
	background-color: #5C6D7E;
	color:#EDE8DF;
	border-top: 1px solid #7C899C;
}

#errorInfo tr {
	color: white;
}

#userInfo{
	
}

#requestInfo{
	
}

#mappingInfo{
	
}

#requestContextInfo{
	
}

#sessionContextInfo{
	
}

#extraInfo {
	
}

#stackTrace{
	
}

#debugPage {
	background-color: #3E4651;
	color: white;
	margin-bottom: 0;
	padding: 1em;
}

.debugTitleException{
	font-family:Menlo, Monaco, Inconsolata, "Lucida Console", monospace;
}

.debugTitleCause{
	margin-top:-15px;
	
}

/* High-Level Stack Trace Elements*/
.traceFirstLine {
	
}
.traceLine {
	
}

/* Mid-Level Stack Trace Elements*/
.traceLineRole {
	padding-right: 1ex;
	font-weight: bold;
}

traceThread{
	
}

traceException{
	
}

.traceLocation {
	
}

/* Trace Location Elements */
.javaLocation {
	
}

.fileLocation {
	
}

/* Trace Exception Elements */
.traceExceptionClass {
	color: darkorange;
}

.traceExceptionClassLabel {
	padding-right: 1ex;
}

.traceExceptionMessage {
	font-style: italic
}

/* Java Location Elements */
.className {
	color: blue;
}

.methodName {
	color: magenta;
}

/* File Location Elements */
.fileName {
	color: purple;
}

.lineNumber {
	color: darkgreen;
}


/* Stack Trace Fixed Texts*/
.causeText { 
	
}

.suppressedText {
	
}

.exceptionText {
	
}

.locationText {

}

.nativeMethodText {
	
}

.unknownSourceText {
	
}

/* Stack Trace Indent Levels 
 * Having more than 3 levels will be very very rare. Still, they are technically infinite.
 * While CSS data parameters are not implemented in browsers we must use explicit class levels.
 * When they are, use in the css:
 * .level {
 *		padding-left: attr(padding)px
 * }
 * , in the html:
 * class="level" data-padding="<bean:write name="level"/>"
 * and in the java change the level increment accordingly.
 */
.level0 {
	padding-left: 0ex;
}

.level1 {
	padding-left: 5ex;
}

.level2 {
	padding-left: 10ex;
}
requestInfoTable
.level3 {
	padding-left: 15ex;
}

.level4 {
	padding-left: 20ex;
}

.level5 {
	padding-left: 25ex;
}

.normalIndent {
	padding-left: 7ex;
}

.suppressedIndent {
	padding-left: 8ex;
}

.causeIndent {
	padding-left: 7ex;
}

.userRole{
	font-family:Menlo, Monaco, Inconsolata, "Lucida Console", monospace;
	margin-bottom:5px;
}

.label{
	font-weight:bold;
	color:#545454;
	padding-right: 20px;
}

.value{
	font-family:Menlo, Monaco, Inconsolata, "Lucida Console", monospace;
}

.label.key{
	font-size:12px;
	color:#585B61;
}

.super-table {
	padding-bottom: 0;
}

.parameters-table {
	padding-top: 0;
	margin-left:1em; padding: 1em; background:white; border:1px solid #CECECE;
}